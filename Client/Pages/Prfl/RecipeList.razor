@page "/{username}/recipes"
@page "/{username}/cocktails"
@using Profile.Client.Components
@using Profile.Client.Components.Prfl
@using Profile.Shared.Models
@inject Services.StateContainer StateContainer
@inject IHttpClientFactory ClientFactory
@inject HttpClient client
@layout MainLayout
@inherits ProfileBase

<Title Value="@username" />

@if(User != null) {
  if(!String.IsNullOrEmpty(User.ImageUrl)) {
    <div>
      <Header Username="@username" ImageUrl="@User.ImageUrl"/>
    </div>
  }
  else {
    <div>
      <Header Username="@username" ImageUrl="/assets/logo/person-circle.svg"/>
    </div>
    
  }
}


@if(Recipes == null) {
    <div>
        <Loading />
    </div>
    
}
else if(Recipes.Length == 0) {
    <div class="alert alert-info mt-3" role="alert">
        The user does not have any recipes yet.
    </div>

}
else {
    @foreach(var recipe in Recipes) {
        var modalId = GetModalId();
        <div>
            <RecipeCard   ModalId="@modalId" Recipe="@recipe" Ingredients="@Ingredients" GetIngredients="(() => GetIngredients(recipe.RecipeId))"/>
        </div>
        
    }
}

 



@code {

    protected override async Task OnInitializedAsync() {

        var client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        StateContainer.SetProperty(username);
        ChangePropertyValue(username, client);
        ChangeIconValue();

        User = await client.GetFromJsonAsync<User>($"api/user/u/{username}");
        Recipes = await client.GetFromJsonAsync<Recipe[]>($"api/Recipe/u/{username}");

        
        StateContainer.OnChange += StateHasChanged;
    }

    private void ChangeIconValue()
    {
        StateContainer.SetAccountIcon("/assets/icons/account.svg");
        StateContainer.SetLinkIcon("/assets/icons/link-fill-ns.svg");
        StateContainer.SetFavoriteIcon("/assets/icons/star.svg");
        StateContainer.SetProjectIcon("/assets/icons/kanban.svg");
        StateContainer.SetVideoIcon("/assets/icons/video.svg");
        StateContainer.SetChefIcon("/assets/icons/food-fill.svg");
        StateContainer.SetBartenderIcon("/assets/icons/alcohol-fill.svg");
        StateContainer.SetProductIcon("/assets/icons/cart.svg");
    }
}
@page "/{username}/projects"
@using Profile.Client.Components
@using Profile.Client.Components.Prfl
@using Profile.Shared.Models
@inject IHttpClientFactory ClientFactory
@inject Services.StateContainer StateContainer
@layout MainLayout

<Title Value="@username" />

@if(Projects == null && User == null) {
    <div>
        <Loading />
    </div>
}
else if(Projects.Length == 0) {
    <div class="alert alert-info mt-3" role="alert">
        The user does not have any projects yet.
    </div>
}
else {
    @foreach(var project in Projects) {
        var modalId = GetModalId();
        <div>
            <Profile.Client.Components.Prfl.LinkCard   ModalId="@modalId" 
                        Url="@project.Url" 
                        Name="@project.Name" 
                        Description="@project.Description" 
                        IsFavorite="@project.IsFavorite" 
                        IconUrl="/assets/icons/kanban.svg"
                        UserId="@User.UserId"
                        LinkId="@project.ProjectId"
                        Type="@LinkType.Project"/>
        </div>
        
    }
}

 



@code {
    [Parameter] public string username { get; set; }
    private Project[] Projects { get; set; }
    private User User { get; set; }

    private int Count = 1;

    protected override async Task OnInitializedAsync() {

        ChangePropertyValue();
        ChangeIconValue();

        var client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");

        User = await client.GetFromJsonAsync<User>($"api/user/u/{username}");
        Projects = await client.GetFromJsonAsync<Project[]>($"api/project/u/{username}");
            
        StateContainer.OnChange += StateHasChanged;
    }
    private void ChangePropertyValue()
    {
        StateContainer.SetProperty(username);
    }


    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }

    private void ChangeIconValue()
    {
        StateContainer.SetAccountIcon("/assets/icons/account.svg");
        StateContainer.SetLinkIcon("/assets/icons/link-fill-ns.svg");
        StateContainer.SetFavoriteIcon("/assets/icons/star.svg");
        StateContainer.SetProjectIcon("/assets/icons/kanban-fill.svg");
        StateContainer.SetVideoIcon("/assets/icons/video.svg");
        StateContainer.SetScheduleIcon("/assets/icons/calendar2.svg");
        StateContainer.SetChefIcon("/assets/icons/food.svg");
        StateContainer.SetBartenderIcon("/assets/icons/alcohol.svg");
    }

    private string GetModalId()
    {
        var num = Count++;
        return "modal" + num;
    }
}
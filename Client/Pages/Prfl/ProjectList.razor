@page "/{username}/projects"
@using Profile.Client.Components
@using Profile.Client.Components.Prfl
@using Profile.Shared.Models
@inject IHttpClientFactory ClientFactory
@inject Services.StateContainer StateContainer
@layout MainLayout
@inherits ProfileBase

<Title Value="@username" />

@if(User != null) {
  if(!String.IsNullOrEmpty(User.ImageUrl)) {
    <div>
      <Header Username="@username" ImageUrl="@User.ImageUrl"/>
    </div>
  }
  else {
    <div>
      <Header Username="@username" ImageUrl="/assets/logo/person-circle.svg"/>
    </div>
    
  }
}


@if(Projects == null && User == null) {
    <div>
        <Loading />
    </div>
}
else if(Projects.Length == 0) {
    <div class="alert alert-info mt-3" role="alert">
        The user does not have any projects yet.
    </div>
}
else {
    @foreach(var project in Projects) {
        var modalId = GetModalId();
        <div>
            <Profile.Client.Components.Prfl.LinkCard   ModalId="@modalId" 
                        Url="@project.Url" 
                        Name="@project.Name" 
                        Description="@project.Description" 
                        IsFavorite="@project.IsFavorite" 
                        IconUrl="/assets/icons/kanban.svg"
                        UserId="@User.UserId"
                        LinkId="@project.ProjectId"
                        Type="@LinkType.Project"/>
        </div>
        
    }
}

 



@code {
    

    protected override async Task OnInitializedAsync() {

        var client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");
        StateContainer.SetProperty(username);
        ChangePropertyValue(username, client);
        ChangeIconValue();

        User = await client.GetFromJsonAsync<User>($"api/user/u/{username}");
        Projects = await client.GetFromJsonAsync<Project[]>($"api/project/u/{username}");
            
        StateContainer.OnChange += StateHasChanged;
    }

    private void ChangeIconValue()
    {
        StateContainer.SetAccountIcon("/assets/icons/account.svg");
        StateContainer.SetLinkIcon("/assets/icons/link-fill-ns.svg");
        StateContainer.SetFavoriteIcon("/assets/icons/star.svg");
        StateContainer.SetProjectIcon("/assets/icons/kanban-fill.svg");
        StateContainer.SetVideoIcon("/assets/icons/video.svg");
        StateContainer.SetScheduleIcon("/assets/icons/calendar2.svg");
        StateContainer.SetChefIcon("/assets/icons/food.svg");
        StateContainer.SetBartenderIcon("/assets/icons/alcohol.svg");
        StateContainer.SetProductIcon("/assets/icons/cart.svg");
    }
}
@page "/{username}/products"
@using Profile.Client.Components
@using Profile.Client.Components.Prfl
@using Profile.Shared.Models
@inject Services.StateContainer StateContainer
@inject IHttpClientFactory ClientFactory
@layout MainLayout

<Title Value="@username" />

@if(Products == null) {
    <div>
        <Loading />
    </div>
}
else if(Products.Length == 0) {
    <div class="alert alert-info mt-3" role="alert">
        The user does not have any links yet.
    </div>

}
else {
    @foreach(var product in Products) {
        string headingId = $"Heading{Count.ToString()}";
        string buttonId = $"Button{Count.ToString()}";
        string accordionTarget = $"Collapse{Count.ToString()}";
        Count++;
        <div class="mt-3">
            <div class="accordion" id="accordionExample">
                <ProductCard Product="@product" HeadingId="@headingId" AccordionTarget="@accordionTarget" ButtonId="@buttonId" PhoneNumber="@PhoneNumber"/>
            </div>
        </div>
        
    }
}

 



@code {
    [Parameter] public string username { get; set; }
    private Product[] Products { get; set; }
    private string PhoneNumber { get; set; }

    private User User { get; set; }

    private int Count = 1;

    protected override async Task OnInitializedAsync() {
        ChangePropertyValue();
        ChangeIconValue();

        var client = ClientFactory.CreateClient("ServerAPI.NoAuthenticationClient");

        User = await client.GetFromJsonAsync<User>($"api/user/u/{username}");
        PhoneNumber = await client.GetStringAsync($"api/user/u/{username}/phone");
        Products = await client.GetFromJsonAsync<Product[]>($"api/product/u/{username}");

        StateContainer.OnChange += StateHasChanged;
    }

    private void ChangePropertyValue()
    {
        StateContainer.SetProperty(username);
    }


    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }

    private void ChangeIconValue()
    {
        StateContainer.SetAccountIcon("/assets/icons/account.svg");
        StateContainer.SetLinkIcon("/assets/icons/link-fill-ns.svg");
        StateContainer.SetFavoriteIcon("/assets/icons/star.svg");
        StateContainer.SetProjectIcon("/assets/icons/kanban.svg");
        StateContainer.SetVideoIcon("/assets/icons/video.svg");
        StateContainer.SetScheduleIcon("/assets/icons/calendar2.svg");
        StateContainer.SetChefIcon("/assets/icons/food.svg");
        StateContainer.SetBartenderIcon("/assets/icons/alcohol.svg");
        StateContainer.SetProductIcon("/assets/icons/alcohol.svg");
        StateContainer.SetProductIcon("/assets/icons/cart-fill.svg");
    }
}